<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns="http://java.sun.com/xml/ns/j2ee" 
	xmlns:web="http://xmlns.jcp.org/xml/ns/javaee" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd http://xmlns.jcp.org/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" 
	version="2.4" id="WebApp_1533640437016">

<!--   <welcome-file-list> -->
<!--     <welcome-file>index.jsp</welcome-file> -->
<!--   </welcome-file-list> -->

  <servlet>
    <servlet-name>springMVC</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath*:/config/springmvc.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>springMVC</servlet-name>
    <url-pattern>*.xhtml</url-pattern>
  </servlet-mapping>
  
  <!-- 在上下文中添加配置文件，在使用接口服务和webservice时需要放开下面配置 -->
<!--  <servlet>
    <servlet-name>ws</servlet-name>
    <servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
    <load-on-startup>4</load-on-startup>
</servlet>
<servlet-mapping>
    <servlet-name>ws</servlet-name>
    <url-pattern>/ws/*</url-pattern>
</servlet-mapping>  -->
  <!-- 在上下文中添加配置文件，在使用接口服务和webservice时需要放开上面面配置 -->
    <servlet>
        <servlet-name>CaptchaServlet</servlet-name>
        <servlet-class>com.hyjx.framework.common.CaptchaServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>CaptchaServlet</servlet-name>
        <url-pattern>/checkcode</url-pattern>
    </servlet-mapping>
  <servlet>
    <servlet-name>commonServlet</servlet-name>
    <servlet-class>com.hyjx.framework.common.CommonServlet</servlet-class>
    <load-on-startup>2</load-on-startup>
  </servlet>
  <servlet>
    <servlet-name>selectServlet</servlet-name>
    <servlet-class>com.hyjx.framework.component.codetable.SelectServlet</servlet-class>
    <load-on-startup>3</load-on-startup>
  </servlet>
  <servlet>
  	<servlet-name>QRCodeServlet</servlet-name>
  	<servlet-class>com.hyjx.framework.common.util.QRCodeServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>commonServlet</servlet-name>
    <url-pattern>/commonServlet</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>selectServlet</servlet-name>
    <url-pattern>/selectServlet</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
  	<servlet-name>QRCodeServlet</servlet-name>
  	<url-pattern>/QRCodeServlet</url-pattern>
  </servlet-mapping>
    <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>  
       	org.springframework.web.filter.CharacterEncodingFilter 
    </filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
  	</filter>
  	<filter-mapping>
    	<filter-name>encodingFilter</filter-name>
    	<url-pattern>/*</url-pattern>
  	</filter-mapping>

  	<!-- <context-param>
    <param-name>patchConfigLocation</param-name>
    <param-value>
        classpath:/config/webservice.xml 
    </param-value>
	</context-param> -->
  	<context-param>
    	<param-name>contextConfigLocation</param-name>
    	<param-value>classpath:/config/spring.xml</param-value>
  	</context-param>
<!-- 	<context-param>  -->
<!-- 	    <param-name>log4jConfigLocation</param-name>  -->
<!-- 	    <param-value>/WEB-INF/classes/config/global.properties</param-value> -->
<!-- 	</context-param> -->
<!-- 	<listener>   -->
<!--         <listener-class>   -->
<!--             org.springframework.web.util.Log4jConfigListener   -->
<!--         </listener-class>   -->
<!--     </listener> -->
	<listener>
    	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  	</listener>
	<filter>  
        <filter-name>cacheFilter</filter-name>
        <filter-class>com.hyjx.framework.common.interceptor.CacheFilter</filter-class>  
        <init-param>
            <param-name>time</param-name>
            <param-value>6000</param-value>
        </init-param>
        <init-param>  
            <param-name>scope</param-name>
            <param-value>application</param-value>
        </init-param>  
    </filter>  
    <filter-mapping>
        <filter-name>cacheFilter</filter-name>  
        <url-pattern>*.css</url-pattern>  
    </filter-mapping>
    <filter-mapping>
        <filter-name>cacheFilter</filter-name>  
        <url-pattern>*.js</url-pattern>  
    </filter-mapping>
    <filter-mapping>
        <filter-name>cacheFilter</filter-name>  
        <url-pattern>*.jpg</url-pattern>  
    </filter-mapping>
        <!-- 清除恶意脚本  js和sql注入-->
        <filter>
            <filter-name>XSSFilter</filter-name>
               <filter-class>com.hyjx.framework.common.interceptor.XSSFilter</filter-class>
        </filter>

        <filter-mapping>
            <filter-name>XSSFilter</filter-name>
            <url-pattern>*.xhtml</url-pattern>
        </filter-mapping>

       <filter-mapping>
            <filter-name>XSSFilter</filter-name>
            <url-pattern>*.jsp</url-pattern>
        </filter-mapping>
		<error-page>
	        <error-code>404</error-code>
	        <location>/component/publicpage/404.jsp</location>
	    </error-page>
	 
	 
	 
	<listener>
		<listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>
	</listener>
	<filter>
		<filter-name>CAS Single Sign Out Filter</filter-name>
		<filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>CAS Single Sign Out Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter>
		<filter-name>CAS Authentication Filter</filter-name>
		<filter-class>com.hyjx.framework.sso.HyjxAuthenticationFilter</filter-class>
	</filter>
	<filter>
		<filter-name>CAS Validation Filter</filter-name>
		<filter-class>com.hyjx.framework.sso.HyjxTicketValidationFilter</filter-class>
	</filter>
	<filter>
		<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
		<filter-class>com.hyjx.framework.sso.HyjxHttpServletRequestWrapperFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>CAS Validation Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>CAS Authentication Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	
</web-app>
